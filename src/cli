#!/usr/bin/env node

const program = require('commander')
const { prompt } = require('inquirer')
require('dotenv').config()
const { sendMessage, sendBroadcast, sendFirstMessage } = require('./services/message')
const { autoLike } = require('./services/auto-like')
const { interval, loginUser, registerUser } = require('./services/utils')


const questions = [
    {
        type : 'input',
        name : 'id',
        message : 'Enter the id of the match:'
    },
    {
        type : 'input',
        name : 'message',
        message : 'Enter the message you want to send:'
    }
]

const questionsBroadcast = [
    {
        type : 'input',
        name : 'message',
        message : 'Enter the message you want to send:'
    }
]

const questionsRegister = [
    {
        type : 'input',
        name : 'username',
        message : 'Enter a username:'
    },
    {
        type : 'input',
        name : 'password',
        message : 'Enter a password:'
    },
    {
        type : 'input',
        name : 'passwordConfirm',
        message : 'Enter your password again:'
    },
    {
        type : 'input',
        name : 'facebook_id',
        message : 'Enter your facebook id:'
    },
    {
        type : 'input',
        name : 'facebook_token',
        message : 'Enter your facebook token:'
    }
]

const questionsLogin = [
    {
        type : 'input',
        name : 'username',
        message : 'Enter your username:'
    },
    {
        type : 'input',
        name : 'password',
        message : 'Enter your password:'
    }
]


program
    .version('0.1.0')
    .description('CLI for Tinder')

program
    .command('send:message')
    .alias('message')
    .description('Send a message to a match')
    .action(()=> {
        prompt(questions).then((answers)=> {
            sendMessage(answers.id, answers.message, (result)=> {
                    console.log(result)
            })
        })
    })


program
    .command('send:broadcast')
    .alias('broadcast')
    .description('Send a message to a match')
    .action(()=> {
        prompt(questionsBroadcast).then((answers)=> {
            sendBroadcast(answers.message)
        })
    })

program
    .command('send:first')
    .alias('first')
    .description('Send a first message just to new matches')
    .action(()=> {
        prompt(questionsBroadcast).then((answers)=> {
            sendFirstMessage(answers.message)
        })
    })

program
    .command('auto:likes [number]')
    .alias('likes')
    .description('Fetch profiles and autolike everyone of them')
    .action((number)=> {
        (number !== undefined) ? autoLike(number) : autoLike(10)
    })

program
    .command('user:register')
    .alias('register')
    .description('Register a new user')
    .action(()=> {
        prompt(questionsRegister).then((answers)=> {
            if(answers.password === answers.passwordConfirm)
            {
                registerUser(answers.username, answers.password, answers.facebookId, answers.facebookToken)
            }
        })
    })

program
    .command('user:login')
    .alias('login')
    .description('Login your user')
    .action(()=> {
        prompt(questionsLogin).then((answers)=> {
            loginUser(answers.username, answers.password, (user)=> {
                console.log(user)
            })
        })
    })

program
    .command('test')
    .description('Test command')
    .action(()=> {
        // saveUserToDatabase('facebookid2', 'facebooktoken2')
        getUsersFromDatabase((results)=> {
            console.log(results)
        })
    })

program.parse(process.argv)
